// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: node/v1/node.proto

package nodev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Node 标识一个网关节点信息。
// 用于负载均衡和连接重定向策略。
type Node struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip    string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port  int32                  `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	// 节点权重，用于负载均衡算法，取值 [0, 100)。
	Weight int32 `protobuf:"varint,4,opt,name=weight,proto3" json:"weight,omitempty"`
	// 节点位置。
	Location string `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	// 节点容量 ( 可支撑连接数的最大值 )。
	ConnCapacity int64 `protobuf:"varint,6,opt,name=conn_capacity,json=connCapacity,proto3" json:"conn_capacity,omitempty"`
	// 节点当前负载。
	Load int64 `protobuf:"varint,7,opt,name=load,proto3" json:"load,omitempty"`
	// 节点标签。
	Labels        []string `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_node_v1_node_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_node_v1_node_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_node_v1_node_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Node) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Node) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Node) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Node) GetConnCapacity() int64 {
	if x != nil {
		return x.ConnCapacity
	}
	return 0
}

func (x *Node) GetLoad() int64 {
	if x != nil {
		return x.Load
	}
	return 0
}

func (x *Node) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type NodeList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeList) Reset() {
	*x = NodeList{}
	mi := &file_node_v1_node_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeList) ProtoMessage() {}

func (x *NodeList) ProtoReflect() protoreflect.Message {
	mi := &file_node_v1_node_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeList.ProtoReflect.Descriptor instead.
func (*NodeList) Descriptor() ([]byte, []int) {
	return file_node_v1_node_proto_rawDescGZIP(), []int{1}
}

func (x *NodeList) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

var File_node_v1_node_proto protoreflect.FileDescriptor

const file_node_v1_node_proto_rawDesc = "" +
	"\n" +
	"\x12node/v1/node.proto\x12\anode.v1\"\xbf\x01\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x12\n" +
	"\x04port\x18\x03 \x01(\x05R\x04port\x12\x16\n" +
	"\x06weight\x18\x04 \x01(\x05R\x06weight\x12\x1a\n" +
	"\blocation\x18\x05 \x01(\tR\blocation\x12#\n" +
	"\rconn_capacity\x18\x06 \x01(\x03R\fconnCapacity\x12\x12\n" +
	"\x04load\x18\a \x01(\x03R\x04load\x12\x16\n" +
	"\x06labels\x18\b \x03(\tR\x06labels\"/\n" +
	"\bNodeList\x12#\n" +
	"\x05nodes\x18\x01 \x03(\v2\r.node.v1.NodeR\x05nodesB\x89\x01\n" +
	"\vcom.node.v1B\tNodeProtoP\x01Z2github.com/JrMarcco/synp-api/api/go/node/v1;nodev1\xa2\x02\x03NXX\xaa\x02\aNode.V1\xca\x02\aNode\\V1\xe2\x02\x13Node\\V1\\GPBMetadata\xea\x02\bNode::V1b\x06proto3"

var (
	file_node_v1_node_proto_rawDescOnce sync.Once
	file_node_v1_node_proto_rawDescData []byte
)

func file_node_v1_node_proto_rawDescGZIP() []byte {
	file_node_v1_node_proto_rawDescOnce.Do(func() {
		file_node_v1_node_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_node_v1_node_proto_rawDesc), len(file_node_v1_node_proto_rawDesc)))
	})
	return file_node_v1_node_proto_rawDescData
}

var file_node_v1_node_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_node_v1_node_proto_goTypes = []any{
	(*Node)(nil),     // 0: node.v1.Node
	(*NodeList)(nil), // 1: node.v1.NodeList
}
var file_node_v1_node_proto_depIdxs = []int32{
	0, // 0: node.v1.NodeList.nodes:type_name -> node.v1.Node
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_node_v1_node_proto_init() }
func file_node_v1_node_proto_init() {
	if File_node_v1_node_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_node_v1_node_proto_rawDesc), len(file_node_v1_node_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_node_v1_node_proto_goTypes,
		DependencyIndexes: file_node_v1_node_proto_depIdxs,
		MessageInfos:      file_node_v1_node_proto_msgTypes,
	}.Build()
	File_node_v1_node_proto = out.File
	file_node_v1_node_proto_goTypes = nil
	file_node_v1_node_proto_depIdxs = nil
}
